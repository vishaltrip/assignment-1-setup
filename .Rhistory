# LOAD THE PACKAGES YOU ARE USING IN THIS CODE CHUNK library(nameofpackage)
library(tidyverse)
install.packages(magrittr)
library(magrittr)
install.packages(legislatoR)
library(legislatoR)
?legislatoR()
install.packages("legislatoR")
library(legislatoR)
# YOUR CODE HERE
get_core(gbr)
get_core(gbr)
library(tibble)
# YOUR CODE HERE
gbr_core <- get_core(legislature = "gbr")
glimpse(gbr_core)
View(gbr_core)
install.packages(c("cli", "gert", "openssl", "rlang"))
total_obs
total_obs
gbr_core %>%
dplyr::count(sex)
male_prop
male_prop <- (11049/(552+11049+1613))*100
male_prop <- ((11049/(552+11049+1613))*100)
male_prop
print("The overall share of male legislators in the dataset is: ", male_prop, "%")
paste("The overall share of male legislators in the dataset is: ", male_prop, "%")
paste("The overall share of male legislators in the dataset is:", round(male_prop,3), "%")
paste("The overall share of male legislators in the dataset is:", round(male_prop,2), "%")
gbr_core %>%
dplyr::count(sex)
gbr_core %>%
dplyr::count(sex) %>% mutate(prop= n *100 / sum(n) )
gbr_core %>%
dplyr::count(sex)
male_prop <- ((11049/(552+11049+1613))*100)
paste("The overall share of male legislators in the dataset is:", round(male_prop,2), "%")
gbr_core <- get_core(legislature = "gbr")
glimpse(gbr_core)
gbr_core %>%
dplyr::count(sex)
# Assuming that all NA values of sex implies "other" gender, we calc the male proportion
male_prop <- ((11049/(552+11049+1613))*100)
paste("The overall share of male legislators in the dataset is:", round(male_prop,2), "%")
gbr_core %>% separate(birthplace, c("birth_lat", "birth_long"), sep=",")
gbr_core %>% separate(deathplace, c("death_lat", "death_long"), sep=",")
gbr_core %>%
separate(birthplace, c("birth_lat", "birth_long"), sep=",", remove=FLASE)
separate(gbr_core, col=birthplace, c("birth_lat", "birth_long"), sep=",")
separate(gbr_core, col=deathplace, c("death_lat", "death_long"), sep=",")
cnt=0
separate(gbr_core, col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(gbr_core, col=deathplace, c("death_lat", "death_long"), sep=",") %>%
ifelse((birth_lat == death_lat && birth_long == death_long), cnt+1, cnt+0) %>%
paste(cnt)
cnt=0
separate(gbr_core, col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(gbr_core, col=deathplace, c("death_lat", "death_long"), sep=",") %>%
ifelse((birth_lat == death_lat && birth_long == death_long), cnt+1) %>%
paste(cnt)
separate(gbr_core, col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(gbr_core, col=deathplace, c("death_lat", "death_long"), sep=",") %>%
ifelse((birth_lat == death_lat && birth_long == death_long), cnt+1) %>%
paste(cnt)
separate(gbr_core, col=birthplace, c("birth_lat", "birth_long"), sep=",")
separate(gbr_core, col=birthplace, c("birth_lat", "birth_long"), sep=",")
separate(gbr_core, col=birthplace, c("birth_lat", "birth_long"), sep=",")
%>%
gb1 <- gbr_core %>%
separate(col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(col=deathplace, c("death_lat", "death_long"), sep=",")
View(gb1)
gbr_core %>%
separate(col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(col=deathplace, c("death_lat", "death_long"), sep=",") %>%
mutate(bd_same = ifelse((birth_lat == death_lat && birth_long == death_long), 1, 0)) %>%
count(bd_same)
gb1 <- gbr_core %>%
separate(col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(col=deathplace, c("death_lat", "death_long"), sep=",") %>%
mutate(bd_same = ifelse((birth_lat == death_lat && birth_long == death_long), 1, 0))
View(gb1)
gb1 <- gbr_core %>%
separate(col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(col=deathplace, c("death_lat", "death_long"), sep=",") %>%
mutate(bd_same = ifelse((birth_lat == death_lat & birth_long == death_long), 1, 0))
gbr_core %>%
separate(col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(col=deathplace, c("death_lat", "death_long"), sep=",") %>%
mutate(bd_same = ifelse((birth_lat == death_lat & birth_long == death_long), 1, 0)) %>%
count(bd_same)
gbr_core %>%
separate(col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(col=deathplace, c("death_lat", "death_long"), sep=",") %>%
mutate(bd_same = ifelse((birth_lat == death_lat & birth_long == death_long), 1, 0)) %>%
count(bd_same)
paste("The no. of who legislators died in the same place they were born in - in ABSOLUTE terms:", 188)
paste("The no. of who legislators died in the same place they were born in - in RELATIVE terms:", (188*100)/(1365+188+11661))
gbr_core %>%
separate(col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(col=deathplace, c("death_lat", "death_long"), sep=",") %>%
mutate(bd_same = ifelse((birth_lat == death_lat & birth_long == death_long), 1, 0)) %>%
count(bd_same)
paste("The no. of who legislators died in the same place they were born in - in ABSOLUTE terms:", 188)
paste("The no. of who legislators died in the same place they were born in - in RELATIVE terms:", round((188*100)/(1365+188+11661),2)
gbr_core %>%
gbr_core %>%
separate(col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(col=deathplace, c("death_lat", "death_long"), sep=",") %>%
mutate(bd_same = ifelse((birth_lat == death_lat & birth_long == death_long), 1, 0)) %>%
count(bd_same)
bd_rel <- (188*100)/(1365+188+11661)
paste("The no. of who legislators died in the same place they were born in - in ABSOLUTE terms:", 188)
paste("The no. of who legislators died in the same place they were born in - in RELATIVE terms:", round(bd_rel,2)
bd_rel <- (188*100)/(1365+188+11661)
gbr_core %>%
separate(col=birthplace, c("birth_lat", "birth_long"), sep=",") %>%
separate(col=deathplace, c("death_lat", "death_long"), sep=",") %>%
mutate(bd_same = ifelse((birth_lat == death_lat & birth_long == death_long), 1, 0)) %>%
count(bd_same)
bd_rel <- (188*100)/(1365+188+11661)
paste("The no. of who legislators died in the same place they were born in - in ABSOLUTE terms:", 188)
paste("The no. of who legislators died in the same place they were born in - in RELATIVE terms:", round(bd_rel,2))
class(gbr_core$birth)
gbr_core%>%
mutate(age_at_death = as.numeric(difftime(birth, death, unit="years")))
gbr_core%>%
mutate(age_at_death = as.numeric(difftime(as.Date(birth), as.Date(death), unit="years")))
gbr_core%>%
mutate(age_at_death = as.numeric(difftime(as.Date(birth), as.Date(death), unit="days")))
gbr_core%>%
mutate(age_at_death = as.numeric(difftime(as.Date(death), as.Date(birth), unit="days")))
gbr_core%>%
mutate(age_at_death = (as.numeric(difftime(as.Date(death), as.Date(birth), unit="days"))/365))
gbr_core%>%
mutate(age_at_death = round((as.numeric(difftime(as.Date(death), as.Date(birth), unit="days"))/365),0))
gbr_core%>%
mutate(age_at_death = round((as.numeric(difftime(as.Date(death), as.Date(birth), unit="days"))/365),0)) %>%
ggplot::ggplot(aes(x=age_of_death)) +
geom_histogram()
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
gbr_core%>%
mutate(age_at_death = round((as.numeric(difftime(as.Date(death), as.Date(birth), unit="days"))/365),0)) %>%
ggplot2::ggplot(aes(x=age_of_death)) +
geom_histogram()
gbr_core%>%
mutate(age_at_death = round((as.numeric(difftime(as.Date(death), as.Date(birth), unit="days"))/365),0)) %>%
ggplot2::ggplot(aes(x=age_at_death)) +
geom_histogram()
gbr_core%>%
mutate(age_at_death = round((as.numeric(difftime(as.Date(death), as.Date(birth), unit="days"))/365),0)) %>%
ggplot2::ggplot(aes(x=age_at_death)) +
geom_histogram(color="black", fill="lightblue",
linetype="dashed")
gbr_core %>%
separate(col=birth, c("b_year", "b_mon_day"), sep="-")
install.packages("stringr")
install.packages("stringr")
library(stringr)
install.packages("DescTools")
library(DescTools)
gbr_core %>%
mutate(birth_char = as.character(birth, '%d/%m/%Y')) %>%
strtrim(birth_char, 5) %>%
Mode(birth_char)
gbr_core %>%
mutate(birth_char = as.character(birth, '%d/%m/%Y')) %>%
strtrim(gbr_core, birth_char, 5) %>%
Mode(birth_char)
gbr_core %>%
mutate(birth_char = as.character(birth, '%d/%m/%Y')) %>%
strtrim(gbr_core$birth_char, 5) %>%
Mode(birth_char)
gbr_core %>%
mutate(just_dates = update(year = 2022))
library(tidyverse)
library(magrittr)
library(legislatoR)
library(tibble)
library(ggplot2)
library(stringr)
library(DescTools)
gbr_core %>%
mutate(just_dates = update(year = 2022))
gbr_core %>%
select(birth)%>%
mutate(just_dates = update(year = 2022))
gbr_core %>%
select(birth)%>%
mutate(mod_dates = update(year = 2022))
gbr_core %>%
select(birth)%>%
mutate(birth = update(year = 2022))
gbr_core %>%
#select(birth)%>%
mutate(mod_birth = update(birth, year = 2022))
gbr_core %>%
mutate(mod_birth = update(birth, year = 2022)) %>%
count(mod_birth)
gbr_core %>%
mutate(name_noWS = str_replace_all(name," ","" ))
gbr_core %>%
mutate(name_mod1 = str_replace_all(name," ","" )) %>%
mutate(name_mod2 = str_replace_all(name_mod1,"-","" ))%>%
mutate(name_mod3 = str_replace_all(name_mod2,",","" ))
new_df
new_df <- gbr_core %>%
mutate(name_mod1 = str_replace_all(name," ","" )) %>%  # removing white spaces
mutate(name_mod2 = str_replace_all(name_mod1,"-","" ))%>% # removing dashes
mutate(name_mod3 = str_replace_all(name_mod2,",","" )) # removing commas
new_df
new_df %>%
mutata(name_length = nchar(name_mod3))
new_df %>%
mutate(name_length = nchar(name_mod3))
new_df %>%
mutate(name_length = nchar(name_mod3)) %>%
dplyr::arrange(desc(name_lenght))
new_df %>%
mutate(name_length = nchar(name_mod3)) %>%
arrange(desc(name_lenght))
new_df %>%
mutate(name_length = nchar(name_mod3)) %>%
arrange(desc(name_length))
new_df <- gbr_core %>%
mutate(name_mod1 = str_replace_all(name," ","" )) %>%  # removing white spaces
mutate(name_mod2 = str_replace_all(name_mod1,"-","" ))%>% # removing dashes
mutate(name_mod3 = str_replace_all(name_mod2,",","" )) # removing commas
arranged_df <- new_df %>%
mutate(name_length = nchar(name_mod3)) %>%
arrange(desc(name_length))
arranged_df %>%
select(name) %>%
head(name, 5)
arranged_df
new_df <- gbr_core %>%
mutate(name_mod1 = str_replace_all(name," ","" )) %>%  # removing white spaces
mutate(name_mod2 = str_replace_all(name_mod1,"-","" ))%>% # removing dashes
mutate(name_mod3 = str_replace_all(name_mod2,",","" )) # removing commas
arranged_df <- new_df %>%
mutate(name_length = nchar(name_mod3)) %>%
arrange(desc(name_length))
new_df <- gbr_core %>%
mutate(name_mod1 = str_replace_all(name," ","" )) %>%  # removing white spaces
mutate(name_mod2 = str_replace_all(name_mod1,"-","" ))%>% # removing dashes
mutate(name_mod3 = str_replace_all(name_mod2,",","" )) # removing commas
arranged_df <- new_df %>%
mutate(name_length = nchar(name_mod3)) %>%
arrange(desc(name_length))
arranged_df <- new_df %>%
mutate(name_length = nchar(name_mod3)) %>%
arrange(desc(name_length)) %>%
top_n(5, name_length)
#arranged_df <-
new_df %>%
mutate(name_length = nchar(name_mod3)) %>%
arrange(desc(name_length)) %>%
top_n(5, name_length)
gbr_core <- get_core(legislature = "gbr")
aut_core <- get_core(legislature = "aut")
can_core <- get_core(legislature = "can")
cze_core <- get_core(legislature = "cze")
fra_core <- get_core(legislature = "fra")
deu_core <- get_core(legislature = "deu")
irl_core <- get_core(legislature = "irl")
sco_core <- get_core(legislature = "sco")
esp_core <- get_core(legislature = "esp")
usa_core <- get_core(legislature = "usa_house")
df_list <- list(gbr_core, aut_core, can_core, cze_core, fra_core, deu_core, irl_core, sco_core, esp_core, usa_core)
View(df_list)
df_list %>% reduce(full_join, by='id')
df_list %>% reduce(full_join)
df_list%>%
dplyr::count(sex)
df_list <- list(gbr_core, aut_core, can_core, cze_core, fra_core, deu_core, irl_core, sco_core, esp_core, usa_core)
master_data <- df_list %>%
reduce(full_join)
master_data %>%
dplyr::count(sex)
master data
master_data
master_data %>%
dplyr::filter(country, sex=="male")
View(master_data)
master_data %>%
group_by(country) %>%
filter(sex == "male")
master_data %>%
group_by(country) %>%
filter(sex == "male") %>%
ggplot2::ggplot(aes(x=country)) +
geom_histogram(color="black", fill="lightblue",
linetype="dashed")
gbr_core%>%
mutate(age_at_death = round((as.numeric(difftime(as.Date(death), as.Date(birth), unit="days"))/365),0)) %>%
ggplot2::ggplot(aes(x=age_at_death)) +
geom_histogram(color="black", fill="lightblue",
linetype="dashed")
master_male <- master_data %>%
group_by(country) %>%
filter(sex == "male")
master_male
ggplot(master_male, aes(x = country, y = count(sex))) +
geom_bar(stat = "identity")
ggplot(master_male, aes(x = country, y = length(sex))) +
geom_bar(stat = "identity")
ggplot(master_male, aes(x = country, y = length(sex))) +
geom_bar(stat = "identity") +
coord_flip() +
theme_classic()
options(scipen=999)
ggplot(master_male, aes(x = country, y = length(sex))) +
geom_bar(stat = "identity") +
coord_flip() +
theme_classic()
ggplot(master_male, aes(x = country, y = length(sex))) +
geom_bar(stat = "identity") +
labs(y= "No. of Male Legislators", x = "Country") +
coord_flip() +
theme_classic()
ggplot(master_male, aes(x = country, y = length(sex), fill = country)) +
geom_bar(stat = "identity") +
labs(y= "No. of Male Legislators", x = "Country") +
coord_flip() +
theme_classic()
gbr_pol <- get_political(gbr)
gbr_pol <- get_political(legislature = "gbr")
View(gbr_pol)
esp_pol <- get_political(legislature = "esp")
View(esp_pol)
# importing data from each session and storing in different data frames
gbr_core <- get_core(legislature = "gbr")
aut_core <- get_core(legislature = "aut")
can_core <- get_core(legislature = "can")
cze_core <- get_core(legislature = "cze")
fra_core <- get_core(legislature = "fra")
deu_core <- get_core(legislature = "deu")
irl_core <- get_core(legislature = "irl")
sco_core <- get_core(legislature = "sco")
esp_core <- get_core(legislature = "esp")
usa_core <- get_core(legislature = "usa_house")
#combining all data frames in a list
df_list_core <- list(gbr_core, aut_core, can_core, cze_core, fra_core, deu_core, irl_core, sco_core, esp_core, usa_core)
#joining all data frames in the list to make a master data frame
master_data_core <- df_list_core %>%
reduce(full_join)
#filtering legislators by country and sex in master data frame
master_male <- master_data_core %>%
group_by(country) %>%
filter(sex == "male")
#plotting a bar chart to show distribution of male legislators across countries
ggplot(master_male, aes(x = country, y = length(sex), fill = country)) +
geom_bar(stat = "identity") +
labs(y= "No. of Male Legislators", x = "Country") +
coord_flip() +
theme_classic()
gbr_pol <- get_political(legislature = "gbr")
aut_pol <- get_political(legislature = "aut")
can_pol <- get_political(legislature = "can")
cze_pol <- get_political(legislature = "cze")
fra_pol <- get_political(legislature = "fra")
deu_pol <- get_political(legislature = "deu")
irl_pol <- get_political(legislature = "irl")
sco_pol <- get_political(legislature = "sco")
esp_pol <- get_political(legislature = "esp")
usa_pol <- get_political(legislature = "usa_house")
#combining all data frames in a list
df_list_pol <- list(gbr_pol, aut_pol, can_pol, cze_pol, fra_pol, deu_pol, irl_pol, sco_pol, esp_pol, usa_pol)
#joining all data frames in the list to make a master data frame
master_data_pol <- df_list_pol %>%
reduce(full_join)
#joining all data frames in the list to make a master data frame
master_data_pol <- df_list_pol %>%
reduce(full_join)
usa_pol
#joining all data frames in the list to make a master data frame
master_data_pol <- df_list_pol %>%
reduce(full_join)
#combining all data frames in a list
df_list_pol <- list(gbr_pol, aut_pol, can_pol, cze_pol, fra_pol, deu_pol, irl_pol, sco_pol, esp_pol)
#joining all data frames in the list to make a master data frame
master_data_pol <- df_list_pol %>%
reduce(full_join)
can_pol
View(usa_pol)
total_gbr <- merge(gbr_core, gbr_pol, by= pageid, all=TRUE)
total_gbr <- merge(gbr_core, gbr_pol, by= "pageid", all=TRUE)
View(total_gbr)
total_gbr <- merge(gbr_core, gbr_pol, by= "pageid", all=TRUE)
total_gbr %>%
# group_by(session, party) %>%
filter(sex=="female") %>%
ggplot(aes(x = session, y = length(sex), fill = party)) +
geom_line()
total_gbr %>%
# group_by(session, party) %>%
filter(sex=="female") %>%
ggplot(aes(x = session, y = length(sex), color = party)) +
geom_line(color = party)
total_gbr %>%
# group_by(session, party) %>%
filter(sex=="female") %>%
ggplot(aes(x = session, y = length(sex), color = party)) +
geom_line()
total_gbr %>%
# group_by(session, party) %>%
filter(sex=="female") %>%
ggplot(aes(x = party, y = length(sex))) +
geom_bar()
total_gbr %>%
# group_by(session, party) %>%
filter(sex=="female") %>%
ggplot(aes(x = party, y = length(sex))) +
geom_bar(stat = "identity")
total_gbr %>%
# group_by(session, party) %>%
filter(sex=="female") %>%
ggplot(aes(x = party, y = length(sex))) +
geom_bar(stat = "identity") +
coord_flip()
# importing data from each session and storing in different data frames
gbr_pol <- get_political(legislature = "gbr")
#merging both pol and core data frames of Great Britain by pageID
total_gbr <- merge(gbr_core, gbr_pol, by= "pageid", all=TRUE)
total_gbr %>%
filter(sex=="female") %>%
ggplot(aes(x = party, y = length(sex))) +
geom_bar(stat = "identity") +
coord_flip()
total_gbr %>%
filter(sex=="female", session_start> '1918-01-10') %>%
ggplot(aes(x = party, y = length(sex))) +
geom_bar(stat = "identity") +
coord_flip()
total_gbr %>%
filter(sex=="female", session_start > '2000-01-10') %>%
ggplot(aes(x = party, y = length(sex))) +
geom_bar(stat = "identity") +
coord_flip()
total_gbr %>%
filter(sex=="female", session_start > '1979-05-04') %>%
ggplot(aes(x = party, y = length(sex))) +
geom_bar(stat = "identity") +
coord_flip()
new_df <- gbr_core %>%
mutate(name_mod1 = str_replace_all(name," ","" )) %>%  # removing white spaces
mutate(name_mod2 = str_replace_all(name_mod1,"-","" ))%>% # removing dashes
mutate(name_mod3 = str_replace_all(name_mod2,",","" )) # removing commas
new_df %>%
mutate(name_length = nchar(name_mod3)) %>% #storing length of name
arrange(desc(name_length)) %>% #arranging in descending order
top_n(5, name_length) #printing top 5 rows
new_df <- gbr_core %>%
mutate(name_mod1 = str_replace_all(name," ","" )) %>%  # removing white spaces
mutate(name_mod1 = str_replace_all(name_mod1,"-","" ))%>% # removing dashes
mutate(name_mod1 = str_replace_all(name_mod1,",","" )) # removing commas
new_df %>%
mutate(name_length = nchar(name_mod1)) %>% #storing length of name
arrange(desc(name_length)) %>% #arranging in descending order
top_n(5, name_length) #printing top 5 rows
View(new_df)
new_df <- gbr_core %>%
mutate(name_mod1 = str_replace_all(name," ","" )) %>%  # removing white spaces
mutate(name_mod1 = str_replace_all(name_mod1,"-","" ))%>% # removing dashes
mutate(name_mod1 = str_replace_all(name_mod1,",","" )) # removing commas
new_df %>%
mutate(name_length = nchar(name_mod1)) %>% #storing length of name
arrange(desc(name_length)) %>% #arranging in descending order
top_n(5, name_length) %>% #printing top 5 rows
select(name)
new_df <- gbr_core %>%
mutate(name_mod1 = str_replace_all(name," ","" )) %>%  # removing white spaces
mutate(name_mod1 = str_replace_all(name_mod1,"-","" ))%>% # removing dashes
mutate(name_mod1 = str_replace_all(name_mod1,",","" )) # removing commas
new_df %>%
mutate(name_length = nchar(name_mod1)) %>% #storing length of name
arrange(desc(name_length)) %>% #arranging in descending order
top_n(5, name_length) %>% #printing top 5 rows
select(name, name_mod1)
total_gbr %>%
filter(sex=="female", session_start > '1979-05-04') %>%
ggplot(aes(x = party, y = length(sex), fill = party)) +
geom_bar(stat = "identity") +
coord_flip()
total_gbr %>%
filter(sex=="female", session_start > '1979-05-04') %>%
ggplot(aes(x = party, y = length(sex), fill = party)) +
geom_bar(stat = "identity") +
labs(y= "No. of Females elected by the Party", x = "Party")
coord_flip()
total_gbr %>%
filter(sex=="female", session_start > '1979-05-04') %>%
ggplot(aes(x = party, y = length(sex), fill = party)) +
geom_bar(stat = "identity") +
labs(y= "No. of Females elected by the Party", x = "Party") +
coord_flip()
total_gbr %>%
filter(session_start > '1979-05-04') %>%
ggplot(aes(x = party, y = length(sex), fill = sex)) +
geom_bar(stat = "identity") +
labs(y= "No. of Females elected by the Party", x = "Party") +
coord_flip()
total_gbr %>%
filter(session_start > '1979-05-04') %>%
ggplot(aes(x = party, y = length(sex), fill = sex)) +
geom_bar(stat = "identity") +
labs(y= "No. of Legislators elected by the Party", x = "Party") +
coord_flip()
